version: 2.1 # This must be the very first line, with no leading spaces

# Define reusable executors (execution environments)
# This promotes consistency and reusability across jobs.
executors:
  # Executor for Node.js based jobs
  node-executor:
    docker:
      - image: cimg/node:18.17.0
    resource_class: small

# Define reusable commands (sequences of steps)
commands:
  restore_npm_cache:
    steps:
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package-lock.json" }}
            - v1-dependencies-
  save_npm_cache:
    steps:
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package-lock.json" }} # Corrected to package-lock.json

jobs:
  build_and_test:
    executor: node-executor
    steps:
      - checkout
      - restore_npm_cache
      - run:
          name: Install Dependencies
          command: npm ci
      - save_npm_cache
      - run:
          name: Run Linting
          command: npm run lint
      - run:
          name: Run Tests with Coverage
          command: npm test
      - persist_to_workspace:
          root: .
          paths:
            - .

  build_docker_image:
    executor: node-executor
    steps:
      - attach_workspace:
          at: .
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Log in to Docker Hub
          command: |
            echo "$DOCKER_HUB_PASSWORD" | docker login -u "$DOCKER_HUB_USERNAME" --password-stdin
      - run:
          name: Build Docker Image
          command: |
            IMAGE_NAME="mrlamar237/cicd-pipeline-demo"
            docker build -f Dockerfile -t ${IMAGE_NAME}:${CIRCLE_SHA1} -t ${IMAGE_NAME}:latest .
      - run:
          name: Verify Docker Images
          command: docker images
      - run:
          name: Push Docker Image to Docker Hub
          command: |
            IMAGE_NAME="mrlamar237/cicd-pipeline-demo"
            docker push ${IMAGE_NAME}:${CIRCLE_SHA1}
            docker push ${IMAGE_NAME}:latest

  # NEW JOB: Verify Docker Container Runs Locally within the CircleCI Runner
  verify_local_container_run:
    executor: node-executor
    steps:
      - attach_workspace:
          at: .
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Log in to Docker Hub (for pulling image)
          command: |
            echo "$DOCKER_HUB_PASSWORD" | docker login -u "$DOCKER_HUB_USERNAME" --password-stdin
      - run:
          name: Pull Docker Image
          command: |
            IMAGE_NAME="mrlamar237/cicd-pipeline-demo"
            docker pull ${IMAGE_NAME}:latest
      - run:
          name: Run Docker Container Locally (within CircleCI runner)
          command: |
            IMAGE_NAME="mrlamar237/cicd-pipeline-demo"
            # Run the container in detached mode, mapping container port 3000 to host port 3000
            docker run -d -p 3000:3000 --name cicd-demo-app-test ${IMAGE_NAME}:latest
      - run:
          name: Verify Application is Running Locally (within CircleCI runner)
          command: |
            echo "Waiting for container to start and respond..."
            # Give the container a moment to fully start up and listen on the port
            sleep 15 # Increased sleep time for robustness
            # Use curl to check the health endpoint and the root path
            # --retry 5: retry up to 5 times
            # --retry-delay 5: wait 5 seconds between retries
            curl --retry 5 --retry-delay 5 http://localhost:3000/health
            curl --retry 5 --retry-delay 5 http://localhost:3000/
      - run:
          name: Stop and Remove Test Container # Clean up the running container
          command: |
            docker stop cicd-demo-app-test || true
            docker rm cicd-demo-app-test || true

  deploy_to_cloud:
    executor: node-executor
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Deploy Application to Cloud (Placeholder)
          command: |
            echo "Starting deployment to cloud platform..."
            REMOTE_HOST="your-cloud-server-ip-or-dns"
            REMOTE_USER="your-ssh-user"

            ssh -o StrictHostKeyChecking=no ${REMOTE_USER}@${REMOTE_HOST} "
              echo '$DOCKER_HUB_PASSWORD' | docker login -u '$DOCKER_HUB_USERNAME' --password-stdin
            "

            ssh -o StrictHostKeyChecking=no ${REMOTE_USER}@${REMOTE_HOST} "
              docker pull mrlamar237/cicd-pipeline-demo:latest
              docker stop cicd-demo-app || true
              docker rm cicd-demo-app || true
              docker run -d -p 80:3000 --name cicd-demo-app \
              -e PORT=3000 \
              -e NODE_ENV=production \
              -e APP_VERSION=${CIRCLE_SHA1} \
              -e GIT_COMMIT=${CIRCLE_SHA1} \
              mrlamar237/cicd-pipeline-demo:latest
            "
            echo "Deployment initiated. Verify application at http://${REMOTE_HOST}/health"

workflows:
  build_test_and_deploy_workflow:
    jobs:
      - build_and_test
      - build_docker_image:
          requires:
            - build_and_test
          filters:
            branches:
              only:
                - master
      - verify_local_container_run: # NEW: Added this job to the workflow
          requires:
            - build_docker_image # Runs after Docker image is built and pushed
          filters:
            branches:
              only:
                - master
      - deploy_to_cloud:
          requires:
            - verify_local_container_run # Now depends on the local container verification
          filters:
            branches:
              only:
                - master
